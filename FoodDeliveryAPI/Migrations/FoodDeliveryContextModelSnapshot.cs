// <auto-generated />
using System;
using FoodDeliveryAPI.Model;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FoodDeliveryAPI.Migrations
{
    [DbContext(typeof(FoodDeliveryContext))]
    partial class FoodDeliveryContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.13");

            modelBuilder.Entity("FoodDeliveryAPI.Model.Customer", b =>
                {
                    b.Property<int>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CustomerName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ReceivingAddress")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("CustomerId");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("FoodDeliveryAPI.Model.DeliveryVehicle", b =>
                {
                    b.Property<int>("DeliveryVehicleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Coordinate")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("DeliverymanName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("DeliverymanPhoneNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("VehicleDescription")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("DeliveryVehicleId");

                    b.ToTable("DeliveryVehicles");
                });

            modelBuilder.Entity("FoodDeliveryAPI.Model.DeliveryVehicleCoordinates", b =>
                {
                    b.Property<int>("DeliveryVehicleCoordinatesId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Coordinate")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("TEXT");

                    b.Property<int>("DeliveryVehicleId")
                        .HasColumnType("INTEGER");

                    b.HasKey("DeliveryVehicleCoordinatesId");

                    b.HasIndex("DeliveryVehicleId");

                    b.ToTable("DeliveryVehicleCoordinates");
                });

            modelBuilder.Entity("FoodDeliveryAPI.Model.Order", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("CustomerId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("DeliveryVehicleId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("OrderStatus")
                        .HasColumnType("INTEGER");

                    b.Property<int>("RestaurantId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("SpecialInstructions")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("TrackingNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("OrderId");

                    b.HasIndex("CustomerId");

                    b.HasIndex("DeliveryVehicleId");

                    b.HasIndex("RestaurantId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("FoodDeliveryAPI.Model.OrderProduct", b =>
                {
                    b.Property<int>("OrderId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ProductId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Ammount")
                        .HasColumnType("INTEGER");

                    b.HasKey("OrderId", "ProductId");

                    b.HasIndex("OrderId")
                        .IsUnique();

                    b.HasIndex("ProductId");

                    b.ToTable("OrderProducts");
                });

            modelBuilder.Entity("FoodDeliveryAPI.Model.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Price")
                        .HasColumnType("TEXT");

                    b.Property<string>("ProductDescription")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("RestaurantId")
                        .HasColumnType("INTEGER");

                    b.HasKey("ProductId");

                    b.HasIndex("RestaurantId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("FoodDeliveryAPI.Model.Restaurant", b =>
                {
                    b.Property<int>("RestaurantId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Coordinate")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PickUpAddress")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("RestaurantName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("RestaurantId");

                    b.ToTable("Restaurants");
                });

            modelBuilder.Entity("FoodDeliveryAPI.Model.DeliveryVehicleCoordinates", b =>
                {
                    b.HasOne("FoodDeliveryAPI.Model.DeliveryVehicle", "DeliveryVehicle")
                        .WithMany("DeliveryVehicleCoordinates")
                        .HasForeignKey("DeliveryVehicleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DeliveryVehicle");
                });

            modelBuilder.Entity("FoodDeliveryAPI.Model.Order", b =>
                {
                    b.HasOne("FoodDeliveryAPI.Model.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FoodDeliveryAPI.Model.DeliveryVehicle", null)
                        .WithMany("Orders")
                        .HasForeignKey("DeliveryVehicleId");

                    b.HasOne("FoodDeliveryAPI.Model.Restaurant", "Restaurant")
                        .WithMany("Orders")
                        .HasForeignKey("RestaurantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("Restaurant");
                });

            modelBuilder.Entity("FoodDeliveryAPI.Model.OrderProduct", b =>
                {
                    b.HasOne("FoodDeliveryAPI.Model.Order", "Order")
                        .WithOne("OrderProduct")
                        .HasForeignKey("FoodDeliveryAPI.Model.OrderProduct", "OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FoodDeliveryAPI.Model.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("FoodDeliveryAPI.Model.Product", b =>
                {
                    b.HasOne("FoodDeliveryAPI.Model.Restaurant", "Restaurant")
                        .WithMany("Products")
                        .HasForeignKey("RestaurantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Restaurant");
                });

            modelBuilder.Entity("FoodDeliveryAPI.Model.DeliveryVehicle", b =>
                {
                    b.Navigation("DeliveryVehicleCoordinates");

                    b.Navigation("Orders");
                });

            modelBuilder.Entity("FoodDeliveryAPI.Model.Order", b =>
                {
                    b.Navigation("OrderProduct")
                        .IsRequired();
                });

            modelBuilder.Entity("FoodDeliveryAPI.Model.Restaurant", b =>
                {
                    b.Navigation("Orders");

                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
